什么是MVC的开发模式：
	MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写
		Model（模型）表示应用程序核心（比如数据库记录列表）。
			应用程序中用于处理应用程序数据逻辑的部分。通常模型对象负责在数据库中存取数据。
		View（视图）显示数据（数据库记录）。
			应用程序中处理数据显示的部分。通常视图是依据模型数据创建的。
		Controller（控制器）处理输入（写入数据库记录）。
			应用程序中处理用户交互的部分。通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据
		
MVC优点：
	1.降低代码耦合性。在MVC模式中，三个层各施其职，所以如果一旦哪一层的需求发生了变化，
		就只需要更改相应的层中的代码而不会影响到其他层中的代码。  
	2.有利于分工合作。在MVC模式中，由于按层把系统分开，那么就能更好的实现开发中的分工。
		网页设计人员可进行开发视图层中的JSP，而对业务熟悉的人员可开发业务层，而其他开发人员可开发控制层。
	3.有利于组件的重用。如控制层可独立成一个能用的组件，表示层也可做成通用的操作界面。可以为一个模型在运行时同时建立和使用多个视图。

MVC缺点：
	1.增加了系统结构和实现的复杂性。对于简单的界面，严格遵循MVC，使模型、视图与控制器分离，会增加结构的复杂性，
		并可能产生过多的更新操作，降低运行效率。  
	2.视图层展示依赖与模型层，视图层需要很少的字段，但是模型层全部提供，性能上有一定影响		
			
MVC工作流程
	第一步：浏览者 -> 调用控制器，对它发出指令
	第二步：控制器 -> 按指令选取一个合适的模型
	第三步：模型 -> 按控制器指令取相应数据
	第四步：控制器 -> 按指令选取相应的视图
	第五步：视图 -> 把第三步取到的数据按用户想要的样子显示出来	









	