Linux常用命令学习
   https://www.cnblogs.com/gaojun/p/3359355.html 
================================================================================================================================================

文件路径切换
    cd /                 //切换到根目录
    cd /bin              //切换到根目录下的bin目录
    cd ../               //切换到上一级目录 或者使用命令：cd ..
    cd ~                 //切换到home目录
    cd -                 //切换到上次访问的目录
    cd xx(文件夹名)       //切换到本目录下的名为xx的文件目录，如果目录不存在报错
    cd /xxx/xx/x         //可以输入完整的路径，直接切换到目标目录，输入过程中可以使用tab键快速补全

查看当前位置
    pwd 


查看当前目录下有什么文件和文件夹
    列表显示
        ll  == ls -l
        
    表格显示
        ls

    ll/ls 列出当前目录下的文件
    -r； 递归列出之目录的内容
    -a： 列出所有包括以 . 开头的文件
    -c： 多列 输出
    -i： 长列表输出显示文件信息


新建文件夹
  mkdir tools          //在当前目录下创建一个名为tools的目录
  mkdir /bin/tools     //在指定目录下创建一个名为tools的目录


清除屏幕
    clear   

新建文件
touch _fileName

删除文件/夹
    rm 选项 文件或文件夹名称
    选项一般就是-rf，若不加此选项则只能删除文件，若加次选择则删除文件夹及其子文件，f为强制执行的意思，有该参数则不会询问是否删除而是强制删除。
    示例：
    （1）rm abc.txt : 删除abc.txt文件。
    （2）rm -rf abc : 删除abc文件夹及其子文件。
    
      rm 文件名              //删除当前目录下的文件
      rm -f 文件名           //删除当前目录的的文件（不询问）
      rm -r 文件夹名         //递归删除当前目录下此名的目录
      rm -rf 文件夹名        //递归删除当前目录下此名的目录（不询问）
      rm -rf *              //将当前目录下的所有目录和文件全部删除
      rm -rf /*             //将根目录下的所有文件全部删除【慎用！相当于格式化系统】


移动文件/夹
    mv 选项 源文件或目录 目标文件或目录
    选项一般有：
    -b ：若需覆盖文件，则覆盖前先行备份。
    -f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖。
    -i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖。
    示例：
    （1）mv b1.txt b1.log : 将文件b1.txt重命名为b1.log。
    （2）mv b1.log /home/test/b : 将b1.log文件移到目录b中。
    （3）mv /home/test/a/*.txt /home/test/b : 将/home/test/a目录下所有txt文件移动到/home/test/b目录下。

      mv 当前目录名 新目录名        //修改目录名，同样适用与文件操作
      mv /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录剪切到 /opt目录下面
      mv -r /usr/tmp/tool /opt    //递归剪切目录中所有文件和文件夹



复制文件/夹
    cp 选项 源文件或目录 目的文件或目录
    选项一般有：
    -i : 覆盖既有文件之前先询问用户。
    -R/r : 递归处理，将指定目录下的所有文件与子目录一并处理。
    -b : 覆盖已存在的文件目标前将目标文件备份。
    -a 复制的文件与原文件时间一样
    示例：
    （1）cp aaa.txt /home/test/a.txt : 将aaa.txt文件复制到/home/test目录下并改名为a.txt。
    （2）cp -r /home/test/a /home/test/b : 将/home/test/a目录及目录下所有文件夹和子文件复制到/home/test/b目录下。
    （3）cp /home/test/a/b*.txt /home/test/b : 将/home/test/a目录下所有b开头的txt文件复制到/home/test/b目录下。


文件重命名

文件搜索
      find /bin -name 'a*'        //查找/bin目录下的所有以a开头的文件或者目录
      find . -name "*.c"     //将目前目录及其子目录下所有延伸档名是 c 的文件列出来
      find . -type f         //将目前目录其其下子目录中所有一般文件列出
      find . -ctime -20      //将目前目录及其子目录下所有最近 20 天内更新过的文件列出
      find /var/log -type f -mtime +7 -ok rm {} \;     //查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们
      find . -type f -perm 644 -exec ls -l {} \;       //查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件
      find / -type f -size 0 -exec ls -l {} \;         //为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径

        命令格式：

         find pathname -options [-print -exec -ok ...]

         命令参数：

         pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。

         -print： find命令将匹配的文件输出到标准输出。

         -exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为'command' {  } \;，注意{   }和\；之间的空格。

         -ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。

         命令选项：

         -name 按照文件名查找文件

         -perm 按文件权限查找文件

         -user 按文件属主查找文件

         -group  按照文件所属的组来查找文件。

         -type  查找某一类型的文件，诸如：

                   b - 块设备文件

                   d - 目录

                   c - 字符设备文件

                   l - 符号链接文件

                   p - 管道文件

                   f - 普通文件

         -size n :[c] 查找文件长度为n块文件，带有c时表文件字节大小

         -amin n   查找系统中最后N分钟访问的文件

         -atime n  查找系统中最后n*24小时访问的文件

         -cmin n   查找系统中最后N分钟被改变文件状态的文件

         -ctime n  查找系统中最后n*24小时被改变文件状态的文件

         -mmin n   查找系统中最后N分钟被改变文件数据的文件

         -mtime n  查找系统中最后n*24小时被改变文件数据的文件

         (用减号-来限定更改时间在距今n日以内的文件，而用加号+来限定更改时间在距今n日以前的文件。 )

         -maxdepth n 最大查找目录深度

         -prune选项来指出需要忽略的目录。在使用-prune选项时要当心，因为如果你同时使用了-depth选项，那么-prune选项就会被find命令忽略

         -newer 如果希望查找更改时间比某个文件新但比另一个文件旧的所有文件，可以使用-newer选项

         实例：

         （1）查找48小时内修改过的文件

         find -atime -2

         （2）在当前目录查找 以.log结尾的文件。 ". "代表当前目录

         find ./ -name '*.log'

         （3）查找/opt目录下 权限为 777的文件

         find /opt -perm 777

         （4）查找大于1K的文件

         find -size +1000c

         find -size 1000c 查找等于1000字符的文件

         -exec         参数后面跟的是command命令，它的终止是以;为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。{}   花括号代表前面find查找出来的文件名。

         实例：

         （5）在当前目录中查找更改时间在10日以前的文件并删除它们(无提醒）

         find . -type f -mtime +10 -exec rm -f {} \;

         （6）当前目录中查找所有文件名以.log结尾、更改时间在5日以上的文件，并删除它们，只不过在删除之前先给出提示。 按y键删除文件，按n键不删除

         find . -name '*.log' mtime +5 -ok -exec rm {} \;

         （7）当前目录下查找文件名以passwd开头，内容包含"pkg"字符的文件

         find . -f -name 'passwd*' -exec grep "pkg" {} \;

         （8）用exec选项执行cp命令 

         find . -name '*.log' -exec cp {} test3 \;

         -xargs find命令把匹配到的文件传递给xargs命令，而xargs命令每次只获取一部分文件而不是全部，不像-exec选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。

         实例：

         （9）查找当前目录下每个普通文件，然后使用xargs来判断文件类型

         find . -type f -print | xargs file

         （10）查找当前目录下所有以js结尾的并且其中包含'editor'字符的普通文件

         find . -type f -name "*.js" -exec grep -lF 'ueditor' {} \;

         find -type f -name '*.js' | xargs grep -lF 'editor'

         （11）利用xargs执行mv命令

         find . -name "*.log" | xargs -i mv {} test4

         （12）用grep命令在当前目录下的所有普通文件中搜索hostnames这个词,并标出所在行

         find . -name \*(转义） -type f -print | xargs grep -n 'hostnames'

         （13）查找当前目录中以一个小写字母开头，最后是4到9加上.log结束的文件

         find . -name '[a-z]*[4-9].log' -print

         （14）在test目录查找不在test4子目录查找

         find test -path 'test/test4' -prune -o -print

         （15）实例1：查找更改时间比文件log2012.log新但比文件log2017.log旧的文件

         find -newer log2012.log ! -newer log2017.log


文件内容搜索
  grep -i "the" demo_file              //在文件中查找字符串(不区分大小写)
  grep -A 3 -i "example" demo_text     //输出成功匹配的行，以及该行之后的三行
  grep -r "ramesh" *                   //在一个文件夹中递归查询包含指定字符串的文件




查看文件
    cat _fileName
         cat主要有三大功能：
         1.一次显示整个文件:cat filename
         2.从键盘创建一个文件:cat > filename 只能创建新文件,不能编辑已有文件.
         3.将几个文件合并为一个文件:cat file1 file2 > file

查看文件权限配置
    文件权限简介：'r' 代表可读（4），'w' 代表可写（2），'x' 代表执行权限（1），括号内代表"8421法"
  ##文件权限信息示例：-rwxrw-r--
  -第一位：'-'就代表是文件，'d'代表是文件夹
  -第一组三位：拥有者的权限
  -第二组三位：拥有者所在的组，组员的权限
  -第三组三位：代表的是其他用户的权限
         
         权限范围：
         u ：目录或者文件的当前的用户
         g ：目录或者文件的当前的群组
         o ：除了目录或者文件的当前用户或群组之外的用户或者群组
         a ：所有的用户及群组
 
         权限代号：
         r ：读权限，用数字4表示
         w ：写权限，用数字2表示
         x ：执行权限，用数字1表示
         - ：删除权限，用数字0表示
         s ：特殊权限
         
  普通授权    chmod +x a.txt    
  8421法     chmod 777 a.txt     //1+2+4=7，"7"说明授予所有权限 
  
   chown命令用于改变文件的所有权
         用法：chown ...[OPTION] [OWNER] [:[GROUP]] FILE...
        常用参数：
            不带参数                 改变单个或多个文件的属主和属组。
            -r                             改变一个目录及其下所有文件（和子目录）的所有权设置。

    chgrp 用于单独设置文件的属组
        用法：chgrp ...[GROUP] FILE...
    
    改变文件权限chmod
         chmod用于改变一个的权限。它以“用户组 +/-权限”的表达方式来增加/删除相应的权限。具体来说，用户组包括了文件属主（u），文件属组（g），其他人（o）和所有人（a），而权限则包括读取（r,w,x）。

        用法： chmod ...[OPTION]...[FILE]...

        demo:
            chmod g+w,o+w cpplint.py
            可以发现 cpplint.py文件组和其他人的访问权限多个写的权限。
    
    
文件解压/打包
  tar -zcvf 打包压缩后的文件名 要打包的文件
  参数说明：
         -c 建立新的压缩文件

         -f 指定压缩文件

         -r 添加文件到已经压缩文件包中

         -u 添加改了和现有的文件到压缩包中

         -x 从压缩包中抽取文件

         -t 显示压缩文件中的内容

         -z 支持gzip压缩

         -j 支持bzip2压缩

         -Z 支持compress解压文件

         -v 显示操作过程
  
  示例：
  tar -zcvf a.tar file1 file2,...      //多个文件压缩打包
  
  tar -zxvf a.tar                      //解包至当前目录
  tar -zxvf a.tar -C /usr------        //指定解压的位置
  unzip test.zip             //解压*.zip文件 
  unzip -l test.zip          //查看*.zip文件的内容 



两台linux之间 文件传输
    scp使用说明：
        1、把本机的文件传给目的服务器：
            scp  get66.pcap root@192.168.1.147: /super
            备注：把本机get66.pcap拷贝到147这台服务器的super目录下，需要提供147的密码

        2、在本机上执行scp，把远端的服务器文件拷贝到本机上：
            scp  root@192.168.1.147: /super/dns .pcap /
            备注：在本机上执行scp，把远端服务器的dns.pcap文件拷贝到本机的根目录下

        3、拷贝目录下的所有文件：
            scp  -r  /super/  root@192.168.1.145:/
            备注：把/super/目录下的所有文件，拷贝到145服务器根目录下


命令上传/下载文件

  说明：使用wget从网上下载软件、音乐、视频 
  示例：wget http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz
  //下载文件并以指定的文件名保存文件
  wget -O nagios.tar.gz http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz


    在Linux主机上，安装上传下载工具包rz及sz 
        yum install -y lrzsz

        上传
            在Linux命令行下输入rz，
        下载
            在linux下输入命令 sz 文件名
            

软件操作

  说明：安装插件命令
  yum install httpd      //使用yum安装apache 
  yum update httpd       //更新apache 
  yum remove httpd       //卸载/删除apache 

  说明：插件安装命令
  rpm -ivh httpd-2.2.3-22.0.1.el5.i386.rpm      //使用rpm文件安装apache 
  rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm      //使用rpm更新apache 
  rpm -ev httpd                                 //卸载/删除apache 

  rpm -e --nodeps 强制删除模式
  
  

用户管理命令
    usaradd username 创建用户
    passwd username 设置密码
    userdel -r username 删除用户 -r 删除用户的同时删除用户家目录
    groupadd groupname 创建用户组
    su - username 切换用户 -：代表连带用户的环境一起切换 -c：仅执行一次命令，而不切换用户身份
    sudo su - 切换用户
    w 查看当前登录用户（详细）
    who 查看当前所有登录用户
    last 查看用户的登录记录，包括多次登录的记录
    lastlog 查看所有用户的最后登录时间
    touch /etc/nologin 禁止除了root以外的所有用户登录，该命令是在/etc目录下创建了一个nologin文件
    passwd -l username 禁止指定用户登录
    passwd -u username 解除被禁止登陆的用户
    passwd -d username 清除指定用户的密码，可以无密码登录该用户

    添加用户
        添加新的用户账号使用useradd命令，语法如下：
        useradd 选项 用户名
        其中各选项含义如下：
        -c comment 指定一段注释性描述。
        -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，能创建主目录。
        -g 用户组 指定用户所属的用户组。
        -G 用户组,用户组 指定用户所属的附加组。
        -s Shell文件 指定用户的登录Shell。
        -u 用户号 指定用户的用户号，如果同时有-o选项，则能重复使用其他用户的标识号。
        -p这个命令是需求提供md5码的加密口令，普通数字是不行的。
        示例：
        （1）useradd test1 : 在默认路径创建一个test1用户。
        （2）useradd -d /usr/test1 -m test1 : 创建一个test1用户，其中-d和-m选项用来为登录名test1产生一个主目录/usr/test1。
        （3）useradd -s /bin/sh -g group -G adm,root test1 : 创建一个test1用户，该用户的登录Shell是/bin/sh，他属于group用户组，同时又属于adm和root用户组，其中group用户组是其主组。

    修改用户
        修改已有用户的信息使用usermod命令，格式如下：
        usermod 选项 用户名
        常用的选项包括-c,-d,-m,-g,-G,-s,-u,-o等，这些选项的意义和useradd命令中的相同，能为用户指定新的资源值。
        示例：
        usermod -s /bin/ksh -d /home/z -g developer test1
        此命令将用户test1的登录Shell修改为ksh，主目录改为/home/z，用户组改 为developer。
        usermod -g testgroup1 test1
        此命令是改动用户test1所属的组为testgroup1这个组。

    删除用户
        删除一个已有的用户账号使用userdel命令，格式如下：
        userdel 选项 用户名
        常用的选项是-r，他的作用是把用户的主目录一起删除。
        示例：
        userdel -r test1
        此命令删除用户test1在系统文件（主要是/etc/passwd，/etc/shadow，/etc/group等）中的记录，同时删除用户的主目录。

用户口令管理
    用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，是被系统锁定的，无法使用，必须为其指定口令后才能使用，即使是空口令。
        指定和修改用户口令的Shell命令是passwd。终极用户能为自己和其他用户指定口令，普通用户只能修改自己的口令。命令的格式为：
        passwd 选项 用户名
        可使用的选项：
        -l 锁定口令，即禁用账号。
        -u 口令解锁。
        -d 使账号无口令。
        -f 强迫用户下次登录时修改口令。
        如果默认用户名，则修改当前用户的口令。
        示例：
        （1）假设当前用户是test，则下面的命令修改该用户自己的口令：
        passwd
        New password:*
        Re-enter new password:*
        （2）如果是终极用户（root），能用下列形式指定任意用户（test）的口令：
        passwd test
        New password:*
        Re-enter new password:*
        （3）为用户test指定空口令时，执行下列形式的命令：
        passwd -d test
        此命令将用户test的口令删除，这样用户test下一次登录时，系统就不再询问口令。
        （4）锁定test用户时，执行下列形式的命令：
        passwd -l test
        此命令将用户test锁定，使其不能登录。


修改用户文件权限
    chmod 

    
切换root用户
    su
    
切换用户（su）
    su yao               //切换为用户"yao",输入后回车需要输入该用户的密码
    exit                 //退出当前用户

执行脚本


动态读取日志文件
    tail 
    用于显示指定文件末尾内容，不指定文件时，作为输入信息进行处理。常用查看日志文件
    tail -f log（查看日志）
=======================================================vim eite=======================================================
文件编辑
    vim _fileName
    vi _fileName


vi 是基于行的一个编辑器
    常用的命令是
    :w      存盘当前文件
    :w!     强制保存当前文件
    :w file 将内容保存到指定的文件
    :w! file 将文件强制保存到指定的文件
    :q      退出编辑器
    :q!     强制退出编辑器
  ## 操作步骤示例 ##
  1.保存文件：按"ESC" -> 输入":" -> 输入"wq",回车     //保存并退出编辑
  2.取消操作：按"ESC" -> 输入":" -> 输入"q!",回车     //撤销本次修改并退出编辑
=======================================================vim eite=======================================================
====================================================================================================================================

ps -aux  
	查看所有的进程（不是动态的）

	//查看当前运行的进程
	ps aux|grep a.out
	//查看当前运行的轻量级进程
	ps -aL|grep a.out
	//查看主线程和新线程的关系
	pstree -p 主线程id

ps -ef         //查看所有正在运行的进程


kill pid       //杀死该pid的进程
kill -9 pid    //强制杀死该进程
  
top 
	查看所有的进程（是动态的）	
	
	
df：显示磁盘分区上可以使用的磁盘空间		
	参数：
		-a #查看全部文件系统，单位默认KB
		-h #使用-h选项以KB、MB、GB的单位来显示，可读性高~~~（最常用）


查看Linux系统有哪些用户  https://www.php.cn/linux-434456.html  https://linux.cn/article-9888-1.html https://blog.csdn.net/feikillyou/article/details/109129870
    $ cat /etc/passwd

查看本机路由表
    route

环境变量查询
环境变量配置

防火墙操作
  service iptables status      //查看iptables服务的状态
  service iptables start       //开启iptables服务
  service iptables stop        //停止iptables服务
  service iptables restart     //重启iptables服务
  chkconfig iptables off       //关闭iptables服务的开机自启动
  chkconfig iptables on        //开启iptables服务的开机自启动
  ##centos7 防火墙操作
  systemctl status firewalld.service     //查看防火墙状态
  systemctl stop firewalld.service       //关闭运行的防火墙
  systemctl disable firewalld.service    //永久禁止防火墙服务


修改Ip
  修改网络配置文件，文件地址：/etc/sysconfig/network-scripts/ifcfg-eth0
  ------------------------------------------------
  主要修改以下配置：  
  TYPE=Ethernet               //网络类型
  BOOTPROTO=static            //静态IP
  DEVICE=ens00                //网卡名
  IPADDR=192.168.1.100        //设置的IP
  NETMASK=255.255.255.0       //子网掩码
  GATEWAY=192.168.1.1         //网关
  DNS1=192.168.1.1            //DNS
  DNS2=8.8.8.8                //备用DNS
  ONBOOT=yes                  //系统启动时启动此设置
  -------------------------------------------------
  修改保存以后使用命令重启网卡：service network restart
  
  
配置映射
  修改文件： vi /etc/hosts
  在文件最后添加映射地址，示例如下：
   192.168.1.101  node1
   192.168.1.102  node2
   192.168.1.103  node3
  配置好以后保存退出，输入命令：ping node1 ，可见实际 ping 的是 192.168.1.101。

  
  
  
