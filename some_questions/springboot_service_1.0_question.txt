
两个SpringBoot项目之间调用
	https://www.jianshu.com/p/a903557a6c64
	
	
	
接口服务重复调用的触发原因：
	1、客户端接口和服务端接口没有一一对齐
	2、客户端请求服务端超时，触发重复请求条件
	3、传输参数过大，导致服务端返回的客户端的时候出现问题
	4、返回的数据没有进行序列化，导致结果不能返回到客户端
	5、使用公共方法不当

使用dubbo管理服务时 可以配置默认超时重连机制
	超时时间和超时后重试的次数
	


如何快速的确定 SpringBoot和SpringCloud对应的版本



事物Transactional
    开启事物 支持 @EnableTransactionManagement // 启注解事务管理，等同于xml配置方式的 <tx:annotation-driven />

    @Transactional(rollbackFor=Exception.class)  
    为方法开启事务同时 指定事务回滚方法
    @Transactional(noRollbackFor=Exception.class)
    不回滚
    
    

Java finally语句到底是在return之前还是之后执行？
    有两种情况下finally语句是不会被执行的：
（1）try语句没有被执行到，如在try语句之前就返回了，这样finally语句就不会执行，这也说明了finally语句被执行的必要而非充分条件是：相应的try语句一定被执行到。

（2）在try块中有System.exit(0);这样的语句，System.exit(0);是终止Java虚拟机JVM的，连JVM都停止了，所有都结束了，当然finally语句也不会被执行到。


finally语句是在try的return语句执行之后，return返回之前执行
finally块中的return语句会覆盖try块中的return返回。
如果finally语句中没有return语句覆盖返回值，那么原来的返回值可能因为finally里的修改而改变也可能不变。
try块里的return语句在异常的情况下不会被执行，这样具体返回哪个看情况。
当发生异常后，catch中的return执行情况与未发生异常时try中return的执行情况完全一样。
